<?xml version="1.0" encoding="UTF-8"?>
<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-4.xsd">
  <servers>
    <server host="127.0.0.1" name="%i">
      <data>%(user.home)/terracotta/server-data1</data>
      <logs>%(user.home)/terracotta/server-logs1</logs>
      <dso-port>9510</dso-port>
      <jmx-port>9520</jmx-port>
      <l2-group-port>9530</l2-group-port>
      <dso>
	<persistence>
	  <mode>permanent-store</mode>
	</persistence>
      </dso>	
   </server>
   <!--server host="%i" name="tc-srv02">
      <data>%(user.home)/terracotta/server-data2</data>
      <logs>%(user.home)/terracotta/server-logs2</logs>
      <dso-port>19510</dso-port>
      <jmx-port>19520</jmx-port>
      <l2-group-port>19530</l2-group-port>
      <dso>
	<persistence>
	  <mode>permanent-store</mode>
	</persistence>
      </dso>	
   </server>
   <ha>
      <mode>networked-active-passive</mode>
    </ha-->
  </servers>

  <clients>
    <logs>%(user.home)/terracotta/client-logs/</logs>
    <modules>
      <module name="tim-ehcache-1.3" version="1.0.4-SNAPSHOT"/>
      <!--module name="clustered-hibernate-3.1.2" version="2.6.0-SNAPSHOT"/-->
      <module name="clustered-hibernate-3.2.5" version="2.6.0-SNAPSHOT"/>
      <module name="spring-config" version="2.6.0-SNAPSHOT"/>
    </modules>
    <dso>
	<!--fault-count>500</fault-count-->
      <debugging>
        <runtime-logging>
          <non-portable-dump>true</non-portable-dump>
        </runtime-logging>
      </debugging>

    </dso>
  </clients>

  <application>
    <dso>
      <instrumented-classes>
        <include>
          <class-expression>org.hibernate.intercept.LazyPropertyInitializer$1</class-expression>
        </include>
        <include>
          <class-expression>test.ehcache.TestObject</class-expression>
        </include>
        <include>
          <class-expression>test.ehcache.ReadCache</class-expression>
        </include>
         <include>
           <class-expression>test.servlet.UserName</class-expression>
         </include>
         <include>
           <class-expression>test.general.TestSync$1</class-expression>
         </include>
         <include>
           <class-expression>test.general.TestSync$2</class-expression>
         </include>
         <include>
           <class-expression>test.general.TestSync$TestObject</class-expression>
         </include>
         <include>
           <class-expression>com.tctest.spring.bean.*</class-expression>
         </include>
         <include>
           <class-expression>test.Course</class-expression>
         </include>
      </instrumented-classes>
      <locks>
        <autolock>
          <method-expression>* test.ehcache.ReadCache.run(..)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock>
          <method-expression>* test.general.TestSync.main(..)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock>
          <method-expression>* test.general.TestSync$1.run(..)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock>
          <method-expression>* test.general.TestSync$2.run(..)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
        <autolock>
          <method-expression>* test.TestApp3.main(..)</method-expression>
          <lock-level>write</lock-level>
        </autolock>
      </locks>
      <roots>
        <root>
  	  <field-name>org.hibernate.intercept.LazyPropertyInitializer.UNFETCHED_PROPERTY</field-name>
	</root>
        <root>
  	  <field-name>test.general.TestSync.map</field-name>
	</root>
        <root>
  	  <field-name>test.TestApp3.courses</field-name>
	</root>
      </roots>
      <web-applications>
        <web-application>testservlet</web-application>
      </web-applications>
    </dso>
    <spring>
      <jee-application name="*">
        <session-support>true</session-support>
        <application-contexts>
          <application-context>
            <paths>
              <path>*/beanfactory-customscope.xml</path>
              <path>*/httpinvoker-servlet.xml</path>
            </paths>
            <beans>
              <bean name="simpleListener">
                <non-distributed-field>transString</non-distributed-field>
	      </bean>
              <bean name="service">
                <non-distributed-field>serviceHelper</non-distributed-field>
	      </bean>
              <bean name="scopedTarget.simpleBean">
                <non-distributed-field>transientField</non-distributed-field>
	      </bean>
              <!--bean name="testFacade">
	      </bean-->
              <!--bean name="conversationScopeInstance">
	      </bean-->
            </beans>
            <distributed-events>
              <distributed-event>com.tctest.spring.bean.*</distributed-event>
            </distributed-events>
          </application-context>
        </application-contexts>
        <locks>
        <autolock>
          <lock-level>write</lock-level>
          <method-expression>* *..*.*(..)</method-expression>
        </autolock>
      </locks>
        <instrumented-classes>
          <include>
            <class-expression>example..*</class-expression>
          </include>
        </instrumented-classes>
      </jee-application>
    </spring>
  </application>
</tc:tc-config>
