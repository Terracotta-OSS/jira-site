2013-04-23 08:51:52,870 [main] INFO  lina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
2013-04-23 08:51:53,002 [main] WARN  .tomcat.util.digester.Digester - [SetPropertiesRule]{Server/Service/Engine/Host} Setting property 'xmlValidation' to 'false' did not find a matching property.
2013-04-23 08:51:53,002 [main] WARN  .tomcat.util.digester.Digester - [SetPropertiesRule]{Server/Service/Engine/Host} Setting property 'xmlNamespaceAware' to 'false' did not find a matching property.
2013-04-23 08:51:53,345 [main] INFO  e.coyote.http11.Http11Protocol - Initializing ProtocolHandler ["http-bio-8080"]
2013-04-23 08:51:53,357 [main] INFO  .apache.coyote.ajp.AjpProtocol - Initializing ProtocolHandler ["ajp-bio-8000"]
2013-04-23 08:51:53,360 [main] INFO  ache.catalina.startup.Catalina - Initialization processed in 1100 ms
2013-04-23 08:51:54,056 [main] INFO  .catalina.core.StandardService - Starting service Catalina
2013-04-23 08:51:54,057 [main] INFO  e.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/7.0.26
2013-04-23 08:51:54,067 [pool-4-thread-1] INFO  he.catalina.startup.HostConfig - Deploying web application archive /srv/tomcat/idstore/webapps/build-webservices-1.0.0.war
2013-04-23 08:51:54,972 [pool-4-thread-1] INFO  st].[/build-webservices-1.0.0] - Initializing Spring FrameworkServlet 'dispatcher'
2013-04-23 08:51:54,972 [pool-4-thread-1] INFO  .web.servlet.DispatcherServlet - FrameworkServlet 'dispatcher': initialization started
2013-04-23 08:51:55,015 [pool-4-thread-1] INFO  pport.XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'dispatcher-servlet': startup date [Tue Apr 23 08:51:55 PDT 2013]; root of context hierarchy
2013-04-23 08:51:55,104 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/dispatcher-servlet.xml]
2013-04-23 08:51:55,329 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [configs/applicationContext-buildServices.xml]
2013-04-23 08:51:55,583 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [configs/applicationContext-MSSQL.xml]
2013-04-23 08:51:56,693 [pool-4-thread-1] INFO  ort.DefaultListableBeanFactory - Overriding bean definition for bean 'requestMappingHandlerMapping': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webMvcConfig; factoryMethodName=requestMappingHandlerMapping; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/build/webservice/config/WebMvcConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webMvcConfig; factoryMethodName=requestMappingHandlerMapping; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/build/webservice/config/WebMvcConfig.class]]
2013-04-23 08:51:57,045 [pool-4-thread-1] INFO  guringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2013-04-23 08:51:57,045 [pool-4-thread-1] INFO  guringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2013-04-23 08:51:57,475 [pool-4-thread-1] INFO  ort.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a1ef618: defining beans [transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,sqlSessionFactory,baseMapper,categoryMapper,categoryDao,customerMapper,feedWizardMapper,genericCategoryDao,marketplaceMapper,orderMapper,purchaseOrderDao,returnMapper,buildDomainMarshaller,productDao,productFeedMapper,productFeedDao,vendorMapper,utilityDao,laborMapper,securityMapper,dataSource,org.springframework.cache.annotation.AnnotationCacheOperationSource#0,org.springframework.cache.interceptor.CacheInterceptor#0,org.springframework.cache.config.internalCacheAdvisor,cacheManager,serviceByZipParser,productAvailabilityParser,deliveryZipCodeParser,generalElectricService,cyberSourceService,upsService,fergusonDirector,fergusonPriceListBuilder,fergusonProductAvailabilityBuilder,fergusonService,marketplaceService,amazonMarketplaceWebServiceClient,amazonMarketplaceConfig,amazonMarketplaceService,ebayMarketplaceService,channelAdvisorHandlerResolver,channelAdvisorWsProps,channelAdvisorService,bolBuilder,orderService,orderController,purchaseOrderService,sourcingService,returnService,returnController,productService,productFeedService,productController,vendorService,vendorController,laborService,categoryComparator,utilityService,emailService,emailer,emailTemplateMap,emailTemplater,rabbitService,channelInitializer,$autoCreateChannelCandidates,org.springframework.integration.internalDefaultConfiguringBeanFactoryPostProcessor,rabbitRouter,productUpdate,fanoutChannel,org.springframework.integration.config.RouterFactoryBean#0,org.springframework.integration.config.ConsumerEndpointFactoryBean#0,prepareEmail,createEmail,org.springframework.integration.handler.LoggingHandler#0,prepareEmailLogger,org.springframework.integration.handler.LoggingHandler#1,createEmailLogger,categoryService,cyberSourceHandler,cyberSourceServicePort,ebayServicePort,bulkDataExchangeServicePort,fileTransferServicePort,ebayMarketplaceConfiguration,fergusonBuilder,channelAdvisorMarketplaceConfig,orderServiceController,vendorServiceController,categoryServiceController,emailServiceController,webMvcConfig,laborServiceController,generalElectricController,upsServiceController,productServiceController,purchaseOrderServiceController,fergusonServiceController,utilityServiceController,rabbitServiceController,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,nullChannel,errorChannel,_org.springframework.integration.errorLogger,taskScheduler,org.springframework.integration.config.IdGeneratorConfigurer#0]; root of factory hierarchy
2013-04-23 08:52:08,198 [pool-4-thread-1] INFO  ache.EhCacheManagerFactoryBean - Initializing EHCache CacheManager
2013-04-23 08:52:08,383 [pool-4-thread-1] INFO  license.ehcache.LicenseManager - Terracotta license loaded from resource /terracotta-license.key
Capabilities: ehcache, search, TMC, server array offheap
Date of Issue: 2013-04-17
Edition: Free
Email: greg.adams@build.com
License Number: 1004106
License Type: Free Production
Licensee: Greg Adams, Build.com
Max Client Count: 4
Product: BigMemory Max
terracotta.serverArray.maxOffHeap: 8G

2013-04-23 08:52:08,398 [pool-4-thread-1] INFO  .filter.AnnotationSizeOfFilter - Using regular expression provided through VM argument net.sf.ehcache.pool.sizeof.ignore.pattern for IgnoreSizeOf annotation : ^.*cache\..*IgnoreSizeOf$
2013-04-23 08:52:08,407 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Located valid 'tools.jar' at '/usr/java/jdk1.7.0_21/jre/../lib/tools.jar'
2013-04-23 08:52:08,421 [pool-4-thread-1] INFO  che.pool.sizeof.JvmInformation - Detected JVM data model settings of: 64-Bit HotSpot JVM with Compressed OOPs
2013-04-23 08:52:08,681 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Extracted agent jar to temporary file /srv/tomcat/idstore/temp/ehcache-sizeof-agent3611847575129369767.jar
2013-04-23 08:52:08,681 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Trying to load agent @ /srv/tomcat/idstore/temp/ehcache-sizeof-agent3611847575129369767.jar
2013-04-23 08:52:08,691 [pool-4-thread-1] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:08,696 [pool-4-thread-1] INFO  he.terracotta.TerracottaClient - Thread [pool-4-thread-1] [cacheManager: 'coreServicesCacheMgr']: Creating new ClusteredInstanceFactory
2013-04-23 08:52:19,618 [Non Stop initialization of Toolkit] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:20,788 [Non Stop initialization of Toolkit] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:21,105 [pool-4-thread-1] INFO  acottaClusteredInstanceFactory - BigMemory version 4.0.0 was built on 20130219-092252, at revision 38653, with jdk 1.6.0_35 by cruise@su10vmo119
2013-04-23 08:52:23,790 [pool-4-thread-1] INFO  ework.oxm.jaxb.Jaxb2Marshaller - Creating JAXBContext with context path [com.build.domain.product]
2013-04-23 08:52:25,296 [init Store asynchronously product] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:25,297 [init Store asynchronously productMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:25,297 [init Store asynchronously uniqueIdShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:25,305 [init Store asynchronously storeShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:25,307 [init Store asynchronously pricebookCostView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:28,890 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/composite/{orderNumber}],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.OrderComposite com.build.webservice.order.OrderServiceController.getOrderComposite(int,java.lang.String)
2013-04-23 08:52:28,891 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/composite],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.OrderComposite com.build.webservice.order.OrderServiceController.createOrder(com.build.domain.order.OrderComposite)
2013-04-23 08:52:28,891 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/tokenize/{cardNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.order.OrderServiceController.tokenizeCard(java.lang.String,com.build.domain.order.CreditCardInfo)
2013-04-23 08:52:28,892 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/cartItems],methods=[GET],params=[cartNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.CartItem> com.build.webservice.order.OrderServiceController.getCartItems(java.lang.String,java.lang.String)
2013-04-23 08:52:28,892 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[GET],params=[transId && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Charge com.build.webservice.order.OrderServiceController.getCharge(int,java.lang.String)
2013-04-23 08:52:28,892 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[GET],params=[orderNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.Charge> com.build.webservice.order.OrderServiceController.getCharges(int,java.lang.String)
2013-04-23 08:52:28,893 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders/{paypalPendingOrderId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPendingOrder com.build.webservice.order.OrderServiceController.getPaypalPendingOrder(int)
2013-04-23 08:52:28,893 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPendingOrder com.build.webservice.order.OrderServiceController.savePaypalPendingOrder(com.build.domain.order.PaypalPendingOrder)
2013-04-23 08:52:28,893 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders/{paypalPendingOrderId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.order.OrderServiceController.deletePaypalPendingOrder(int)
2013-04-23 08:52:28,893 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments/{paypalPaymentId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.getPaypalPaymentById(int)
2013-04-23 08:52:28,894 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[GET],params=[paymentId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.getPaypalPaymentByPaymentId(int)
2013-04-23 08:52:28,894 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[GET],params=[paypalOrderNumber],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.PaypalPayment> com.build.webservice.order.OrderServiceController.getPaypalPaymentsByOrder(int)
2013-04-23 08:52:28,894 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.savePaypalPayment(com.build.domain.order.PaypalPayment)
2013-04-23 08:52:28,895 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments/{paypalPaymentId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.order.OrderServiceController.deletePaypalPayment(int)
2013-04-23 08:52:28,895 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/generateBol],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.order.OrderServiceController.generateBol(com.build.domain.order.bol.Bol)
2013-04-23 08:52:28,895 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Order com.build.webservice.order.OrderServiceController.save(com.build.domain.order.Order)
2013-04-23 08:52:28,895 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.customer.Customer com.build.webservice.order.OrderServiceController.save(com.build.domain.customer.Customer)
2013-04-23 08:52:28,896 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Charge com.build.webservice.order.OrderServiceController.save(com.build.domain.order.Charge)
2013-04-23 08:52:28,896 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/address],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.customer.Address com.build.webservice.order.OrderServiceController.save(com.build.domain.customer.Address)
2013-04-23 08:52:28,896 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/cartItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.CartItem com.build.webservice.order.OrderServiceController.save(com.build.domain.order.CartItem)
2013-04-23 08:52:28,897 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/{orderNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Order com.build.webservice.order.OrderServiceController.getOrder(int,java.lang.String)
2013-04-23 08:52:28,902 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/resetConfirmZipVendorServiceableZipCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.resetConfirmZipVendorServiceableZipCode()
2013-04-23 08:52:28,903 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors],methods=[GET],params=[vendorId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.getVendor(java.lang.String)
2013-04-23 08:52:28,903 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/{vendorUid}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.getVendor(int)
2013-04-23 08:52:28,903 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorServiceableZipCode com.build.webservice.vendor.VendorServiceController.getVendorServiceableZipCode(java.lang.Integer,java.lang.Integer,java.lang.String)
2013-04-23 08:52:28,904 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups/{vendorGroupId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.Vendor> com.build.webservice.vendor.VendorServiceController.getVendorsInGroup(int)
2013-04-23 08:52:28,904 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.getVendorCost(int,int,java.lang.Integer)
2013-04-23 08:52:28,904 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs/{vendorCostId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.getVendorCost(int)
2013-04-23 08:52:28,905 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[POST],params=[vendorUid && uniqueId && cost && operation=save],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.saveVendorCost(int,int,java.lang.Integer,double)
2013-04-23 08:52:28,905 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.saveVendorCost(com.build.domain.vendor.VendorCost)
2013-04-23 08:52:28,905 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/inventory],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.VendorInventory> com.build.webservice.vendor.VendorServiceController.getVendorInventorySet(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:52:28,906 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/{vendorUid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendor(int)
2013-04-23 08:52:28,906 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.saveVendor(com.build.domain.vendor.Vendor)
2013-04-23 08:52:28,906 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && uniqueId && operation=hasCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.hasVendorCost(int,int,java.lang.Integer)
2013-04-23 08:52:28,907 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && productId && manufacturer && finish && operation=hasCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.hasVendorCost(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
2013-04-23 08:52:28,907 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs/{vendorCostId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendorCost(int)
2013-04-23 08:52:28,907 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes/{vendorServiceableZipCodeId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendorServiceableZipCode(int)
2013-04-23 08:52:28,907 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorServiceableZipCode com.build.webservice.vendor.VendorServiceController.saveVendorServiceableZipCode(com.build.domain.vendor.VendorServiceableZipCode)
2013-04-23 08:52:28,908 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/removeUnconfirmedVendorServiceableZipCode],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.saveVendorServiceableZipCode()
2013-04-23 08:52:28,908 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.VendorGroup> com.build.webservice.vendor.VendorServiceController.getVendorGroups()
2013-04-23 08:52:28,908 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups],methods=[GET],params=[vendorId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.vendor.VendorServiceController.getGroupIdsForVendor(java.lang.String)
2013-04-23 08:52:28,909 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/queryCount],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.vendor.VendorServiceController.getVendorQueryCount(java.lang.Integer,java.lang.String,java.lang.String)
2013-04-23 08:52:28,909 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/find],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.Vendor> com.build.webservice.vendor.VendorServiceController.findVendors(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)
2013-04-23 08:52:28,909 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[uniqueId && cost && operation=validateCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.validateVendorCost(int,double)
2013-04-23 08:52:28,911 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/categories/subs],methods=[GET],params=[siteId && parentId && featured && updateCache],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.category.CategoryItem> com.build.webservice.category.CategoryServiceController.getSubCategories(int,int,boolean,boolean)
2013-04-23 08:52:28,911 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/categories/manufacturers],methods=[GET],params=[siteId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.category.CategoryItem com.build.webservice.category.CategoryServiceController.getManufacturerCategory(int,java.lang.String)
2013-04-23 08:52:28,913 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[GET],params=[emailQueueTypeId && identifierValue],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.EmailQueue com.build.webservice.email.EmailServiceController.getEmailQueue(int,java.lang.String)
2013-04-23 08:52:28,913 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[GET],params=[emailQueueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.EmailQueue com.build.webservice.email.EmailServiceController.getEmailQueue(int)
2013-04-23 08:52:28,913 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue/{emailQueueId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.deleteEmailQueue(int)
2013-04-23 08:52:28,914 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/amqp],methods=[GET],params=[emailTemplateId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.utility.EmailTemplateParameter> com.build.webservice.email.EmailServiceController.getEmailTemplateParameterByEmailTemplateId(int)
2013-04-23 08:52:28,914 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.saveEmailQueue(com.build.domain.utility.EmailQueue)
2013-04-23 08:52:28,914 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[POST],params=[emailQueueTypeId && identifierValue],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.saveEmailQueue(int,java.lang.String)
2013-04-23 08:52:28,918 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveService(com.build.domain.labor.Service)
2013-04-23 08:52:28,919 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services/{serviceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteService(int)
2013-04-23 08:52:28,919 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveProductXService(com.build.domain.labor.ProductXService)
2013-04-23 08:52:28,919 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products/{productXServiceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteProductXService(int)
2013-04-23 08:52:28,920 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.labor.VendorServiceableZipCodeService> com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeService(java.lang.String)
2013-04-23 08:52:28,920 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveVendorServiceableZipCodeService(com.build.domain.labor.VendorServiceableZipCodeService)
2013-04-23 08:52:28,920 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes/{vendorServiceableZipCodeServiceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteVendorServiceableZipCodeService(int)
2013-04-23 08:52:28,921 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[availableZipCode && availableProductUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.labor.LaborServiceController.getAvailableServicesByZipAndUniqueId(java.lang.String,int)
2013-04-23 08:52:28,921 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[unavailableZipCode && unavailableProductUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.labor.LaborServiceController.getUnavailableServicesByZipAndUniqueId(java.lang.String,int)
2013-04-23 08:52:28,921 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.Service com.build.webservice.labor.LaborServiceController.getServiceByServiceId(int)
2013-04-23 08:52:28,921 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[externalServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.Service com.build.webservice.labor.LaborServiceController.getServiceByExternalServiceId(java.lang.String)
2013-04-23 08:52:28,922 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[serviceTypeId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ServiceType com.build.webservice.labor.LaborServiceController.getServiceTypeByServiceTypeId(java.lang.Integer)
2013-04-23 08:52:28,922 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[type],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ServiceType com.build.webservice.labor.LaborServiceController.getServiceTypeByType(java.lang.String)
2013-04-23 08:52:28,922 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[productXServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ProductXService com.build.webservice.labor.LaborServiceController.getProductXServiceByProductXServiceId(java.lang.Integer)
2013-04-23 08:52:28,923 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[uniqueId && serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ProductXService com.build.webservice.labor.LaborServiceController.getProductXServiceByUniqueIdAndServiceId(java.lang.Integer,java.lang.Integer)
2013-04-23 08:52:28,923 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[productUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.labor.ProductXService> com.build.webservice.labor.LaborServiceController.getProductXServiceByUniqueId(int)
2013-04-23 08:52:28,923 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[vendorServiceableZipCodeServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.VendorServiceableZipCodeService com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeServiceByVendorServiceableZipCodeServiceId(java.lang.Integer)
2013-04-23 08:52:28,924 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[vendorServiceableZipCodeId && serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.VendorServiceableZipCodeService com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeServiceByVendorServiceableZipCodeIdAndServiceId(java.lang.Integer,java.lang.Integer)
2013-04-23 08:52:28,926 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/requestDeliveryZipCodes],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ge.GeneralElectricController.requestDeliveryZipCodes()
2013-04-23 08:52:28,927 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/deliveryAvailability/{zipCode}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.String> com.build.webservice.ge.GeneralElectricController.getDeliveryCalendarAvailability(java.lang.String)
2013-04-23 08:52:28,927 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/deliveryDate/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.ge.GeneralElectricController.getDeliveryDate(int)
2013-04-23 08:52:28,928 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/validateCart],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.CartValidator com.build.webservice.ge.GeneralElectricController.validateCart(com.build.domain.ge.CartValidator)
2013-04-23 08:52:28,928 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/reserveDeliveryDate/{poNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Boolean com.build.webservice.ge.GeneralElectricController.reserveDeliveryDate(int)
2013-04-23 08:52:28,928 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/modelAvailability],methods=[GET],params=[uniqueId && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.ModelAvailability com.build.webservice.ge.GeneralElectricController.getModelAvailability(int,java.lang.String)
2013-04-23 08:52:28,928 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/modelAvailability],methods=[GET],params=[productId && manufacturer && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.ge.ModelAvailability> com.build.webservice.ge.GeneralElectricController.getModelAvailability(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:52:28,929 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/realAvailability],methods=[GET],params=[uniqueId && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.ModelAvailability com.build.webservice.ge.GeneralElectricController.getRealTimeModelAvailability(int,java.lang.String)
2013-04-23 08:52:28,929 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/realAvailability],methods=[GET],params=[productId && manufacturer && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.ge.ModelAvailability> com.build.webservice.ge.GeneralElectricController.getRealTimeModelAvailability(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:52:28,929 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/sendGeOrders],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.ge.GeneralElectricController.sendGeOrders()
2013-04-23 08:52:28,931 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ups/getTimeInTransit],methods=[GET],params=[fromPostalCode && fromCountry && toPostalCode && toCountry && shipDate && monetaryValue && weight],headers=[],consumes=[],produces=[],custom=[]}" onto public com.ups.api.timeintransitresponse.TimeInTransitResponse com.build.webservice.ups.UpsServiceController.getTimeInTransit(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String) throws javax.xml.bind.JAXBException,java.io.IOException
2013-04-23 08:52:28,938 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[GET],params=[productId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.Product> com.build.webservice.product.ProductServiceController.getProducts(java.lang.String,java.lang.String)
2013-04-23 08:52:28,938 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/composite],methods=[GET],params=[manufacturer && productId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.composite.ProductComposite com.build.webservice.product.ProductServiceController.getProductComposite(java.lang.String,java.lang.String,java.lang.String,int,boolean,int,int,boolean)
2013-04-23 08:52:28,939 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/composite],methods=[GET],params=[uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.composite.ProductComposite com.build.webservice.product.ProductServiceController.getProductComposite(java.lang.Integer,java.lang.String,int,boolean,int,int,boolean)
2013-04-23 08:52:28,939 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductDrop> com.build.webservice.product.ProductServiceController.getProductDrops(java.util.List<com.build.domain.product.SimpleProductCriteria>,int,java.lang.String,java.lang.String,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:52:28,940 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && pricebookId && !simpleCost],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.getPricebookCost(int,int)
2013-04-23 08:52:28,940 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/imageGallery],methods=[GET],params=[productId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductImageGallery> com.build.webservice.product.ProductServiceController.getProductImageGallery(java.lang.String,java.lang.String)
2013-04-23 08:52:28,940 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/shippingCalculationName],methods=[GET],params=[active && omc && site && customers],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ShippingCalculationName> com.build.webservice.product.ProductServiceController.getShippingCalculationNames(boolean,boolean,boolean,boolean)
2013-04-23 08:52:28,941 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.getProduct(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:52:28,941 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/{uniqueId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.getProduct(int,boolean)
2013-04-23 08:52:28,941 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/shippingCalculationName],methods=[GET],params=[Id],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ShippingCalculationName com.build.webservice.product.ProductServiceController.getShippingCalculationName(int)
2013-04-23 08:52:28,941 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/{productAttributeId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductAttribute com.build.webservice.product.ProductServiceController.getProductAttribute(int)
2013-04-23 08:52:28,942 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/queryCount],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.product.ProductServiceController.getProductAttributeQueryCount(java.lang.String,java.lang.Boolean)
2013-04-23 08:52:28,942 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/find],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductAttribute> com.build.webservice.product.ProductServiceController.findProductAttributes(java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,int,int)
2013-04-23 08:52:28,942 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && pricebookId && simpleCost],headers=[],consumes=[],produces=[],custom=[]}" onto public double com.build.webservice.product.ProductServiceController.getPrice(int,int)
2013-04-23 08:52:28,943 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductDrop com.build.webservice.product.ProductServiceController.getProductDrop(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:52:28,943 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops/popular],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.Map<java.lang.String, java.util.List<com.build.domain.product.ProductDrop>> com.build.webservice.product.ProductServiceController.getPopularProductDrops(int,int,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:52:28,943 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[DELETE],params=[uniqueId && pricebookId],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteCost(int,int)
2013-04-23 08:52:28,944 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/stock/],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.product.ProductServiceController.getProductStock(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:52:28,944 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/freightRate],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ShippingRate> com.build.webservice.product.ProductServiceController.getFreightRate(com.build.domain.product.ShippingDetails)
2013-04-23 08:52:28,944 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/saveShippingCalculationName],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ShippingCalculationName com.build.webservice.product.ProductServiceController.saveShippingCalculationName(com.build.domain.product.ShippingCalculationName)
2013-04-23 08:52:28,945 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductAttribute com.build.webservice.product.ProductServiceController.saveProductAttribute(com.build.domain.product.ProductAttribute)
2013-04-23 08:52:28,945 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && cost && operation=validateCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.product.ProductServiceController.validatePricebookCost(int,double)
2013-04-23 08:52:28,946 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[DELETE],params=[quid],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteProductQuestion(int)
2013-04-23 08:52:28,946 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[DELETE],params=[prid],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteProductQuestions(int)
2013-04-23 08:52:28,946 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductQuestion com.build.webservice.product.ProductServiceController.saveProductQuestion(com.build.domain.product.ProductQuestion)
2013-04-23 08:52:28,947 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[GET],params=[prid && updateCache],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductQuestion> com.build.webservice.product.ProductServiceController.getProductQuestion(int,boolean)
2013-04-23 08:52:28,947 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[GET],params=[prid],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductQuestion> com.build.webservice.product.ProductServiceController.getProductQuestion(int)
2013-04-23 08:52:28,947 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.save(com.build.domain.product.Product)
2013-04-23 08:52:28,948 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/saveAll],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.Product> com.build.webservice.product.ProductServiceController.save(java.util.List<com.build.domain.product.Product>)
2013-04-23 08:52:28,948 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[POST],params=[uniqueId && pricebookId && cost],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.save(int,int,double)
2013-04-23 08:52:28,948 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.save(com.build.domain.product.PricebookCost)
2013-04-23 08:52:28,948 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/{uniqueId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.delete(int)
2013-04-23 08:52:28,952 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrder com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrder(int,java.lang.String)
2013-04-23 08:52:28,953 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/composite/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderComposite com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderComposite(int,java.lang.String)
2013-04-23 08:52:28,953 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders],methods=[GET],params=[orderNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrder> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrders(int,java.lang.String)
2013-04-23 08:52:28,953 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems/{uniqueId}],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderCartItem com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItem(int,java.lang.String)
2013-04-23 08:52:28,954 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[GET],params=[poNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderCartItem> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItems(int,java.lang.String)
2013-04-23 08:52:28,954 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[GET],params=[transId && siteName && status],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderCartItem> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItemsByTransId(int,java.lang.String,java.lang.String)
2013-04-23 08:52:28,954 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poTracking],methods=[GET],params=[poNumber],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderTracking> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderTrackingList(int,java.lang.String)
2013-04-23 08:52:28,955 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/sourceOrder/{orderNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.sourceOrder(int)
2013-04-23 08:52:28,955 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrder com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.PurchaseOrder)
2013-04-23 08:52:28,955 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/filter],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.SourcingRuleFilter)
2013-04-23 08:52:28,955 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/rule],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.SourcingRule)
2013-04-23 08:52:28,956 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderCartItem com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.PurchaseOrderCartItem)
2013-04-23 08:52:28,956 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.delete(int,java.lang.String)
2013-04-23 08:52:28,957 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ferguson/updatepriceinventorybympn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ferguson.FergusonServiceController.updateFergusonPricingAndInventory(java.util.List<java.lang.String>)
2013-04-23 08:52:28,958 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ferguson/builders],methods=[POST],params=[uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ferguson.FergusonServiceController.updateFergusonPricingAndInventory(int)
2013-04-23 08:52:28,960 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[siteId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.Site com.build.webservice.utility.UtilityServiceController.getSite(java.lang.Integer)
2013-04-23 08:52:28,960 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls],methods=[GET],params=[programId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.ProgramControl com.build.webservice.utility.UtilityServiceController.getProgramControl(java.lang.String)
2013-04-23 08:52:28,961 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.ProgramControl com.build.webservice.utility.UtilityServiceController.getProgramControl(int)
2013-04-23 08:52:28,961 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls],methods=[GET],params=[programId && operation=isActive],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.utility.UtilityServiceController.getActiveProgram(java.lang.String,java.lang.Integer)
2013-04-23 08:52:28,961 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[live],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.utility.Site> com.build.webservice.utility.UtilityServiceController.getLiveSites()
2013-04-23 08:52:28,962 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Integer com.build.webservice.utility.UtilityServiceController.getSiteId(java.lang.String)
2013-04-23 08:52:28,962 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/stateAbbrs],methods=[GET],params=[stateName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.utility.UtilityServiceController.getStateAbbr(java.lang.String)
2013-04-23 08:52:28,962 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/stateAbbrs],methods=[GET],params=[zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.utility.UtilityServiceController.getStateAbbrByZipCode(java.lang.String)
2013-04-23 08:52:28,963 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/rabbit/consume],methods=[GET],params=[queue],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.rabbit.RabbitMessage com.build.webservice.rabbit.RabbitServiceController.consumeMessage(java.lang.String)
2013-04-23 08:52:28,963 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/rabbit/send],methods=[POST],params=[queue],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.rabbit.RabbitServiceController.sendMessage(java.lang.String,com.build.domain.rabbit.RabbitMessage)
2013-04-23 08:52:29,517 [pool-4-thread-1] INFO  urrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2013-04-23 08:52:29,537 [pool-4-thread-1] INFO  port.DefaultLifecycleProcessor - Starting beans in phase -2147483648
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {router} as a subscriber to the 'rabbitRouter' channel
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'rabbitRouter' has 1 subscriber(s).
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started org.springframework.integration.config.ConsumerEndpointFactoryBean#0
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:prepareEmailLogger} as a subscriber to the 'prepareEmail' channel
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'prepareEmail' has 1 subscriber(s).
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started prepareEmailLogger
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:createEmailLogger} as a subscriber to the 'createEmail' channel
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'createEmail' has 1 subscriber(s).
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started createEmailLogger
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  hannel.PublishSubscribeChannel - Channel 'errorChannel' has 1 subscriber(s).
2013-04-23 08:52:29,538 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2013-04-23 08:52:29,620 [pool-4-thread-1] INFO  .web.servlet.DispatcherServlet - FrameworkServlet 'dispatcher': initialization completed in 34648 ms
2013-04-23 08:52:29,647 [pool-4-thread-1] INFO  he.catalina.startup.HostConfig - Deploying web application directory /srv/tomcat/idstore/webapps/manager
2013-04-23 08:52:29,716 [main] INFO  e.coyote.http11.Http11Protocol - Starting ProtocolHandler ["http-bio-8080"]
2013-04-23 08:52:29,743 [main] INFO  .apache.coyote.ajp.AjpProtocol - Starting ProtocolHandler ["ajp-bio-8000"]
2013-04-23 08:52:29,754 [main] INFO  ache.catalina.startup.Catalina - Server startup in 36394 ms
2013-04-23 08:52:30,807 [init Store asynchronously pricebookMultiplier] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,807 [init Store asynchronously productCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,808 [init Store asynchronously siteDatabaseLookup] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,808 [init Store asynchronously productSpecValue] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,808 [init Store asynchronously vendorEta] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,809 [init Store asynchronously manufacturerLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,809 [init Store asynchronously shippingCalculationNameView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,809 [init Store asynchronously mostPopularCategoryProduct] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,809 [init Store asynchronously site] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,809 [init Store asynchronously categoryTree] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,810 [init Store asynchronously productSpecAttribute] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:30,810 [init Store asynchronously productQuestions] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,116 [init Store asynchronously zipLatLong] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,118 [init Store asynchronously vendorLeadTimeMessage] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,124 [init Store asynchronously sourcingRuleFilter] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,127 [init Store asynchronously productDrop] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,127 [init Store asynchronously manufacturerMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:33,128 [init Store asynchronously productComposite] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,577 [init Store asynchronously productCompositeSiteSpecific] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,577 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,578 [init Store asynchronously vendorLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,578 [init Store asynchronously shippingCalculationView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,578 [init Store asynchronously productCompositeInternal] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,580 [init Store asynchronously sourcingRule] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,675 [init Store asynchronously product] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,675 [init Store asynchronously productMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,675 [init Store asynchronously pricebookCostView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,675 [init Store asynchronously storeShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,675 [init Store asynchronously uniqueIdShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,683 [init Store asynchronously zipLatLong] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,691 [init Store asynchronously site] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,692 [init Store asynchronously pricebookMultiplier] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,692 [init Store asynchronously mostPopularCategoryProduct] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,692 [init Store asynchronously productQuestions] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,692 [init Store asynchronously siteDatabaseLookup] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,697 [init Store asynchronously productSpecAttribute] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,698 [init Store asynchronously productQuestions] INFO  s.ehcache.store.ClusteredStore - Cache [productQuestions] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously mostPopularCategoryProduct] INFO  s.ehcache.store.ClusteredStore - Cache [mostPopularCategoryProduct] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously pricebookMultiplier] INFO  s.ehcache.store.ClusteredStore - Cache [pricebookMultiplier] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously siteDatabaseLookup] INFO  s.ehcache.store.ClusteredStore - Cache [siteDatabaseLookup] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously site] INFO  s.ehcache.store.ClusteredStore - Cache [site] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously zipLatLong] INFO  s.ehcache.store.ClusteredStore - Cache [zipLatLong] using concurrency: 256
2013-04-23 08:52:35,698 [init Store asynchronously productSpecAttribute] INFO  s.ehcache.store.ClusteredStore - Cache [productSpecAttribute] using concurrency: 256
2013-04-23 08:52:35,700 [init Store asynchronously uniqueIdShippingCategory] INFO  s.ehcache.store.ClusteredStore - Cache [uniqueIdShippingCategory] using concurrency: 256
2013-04-23 08:52:35,700 [init Store asynchronously pricebookCostView] INFO  s.ehcache.store.ClusteredStore - Cache [pricebookCostView] using concurrency: 256
2013-04-23 08:52:35,705 [init Store asynchronously product] INFO  s.ehcache.store.ClusteredStore - Cache [product] using concurrency: 256
2013-04-23 08:52:35,705 [init Store asynchronously categoryTree] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,705 [init Store asynchronously categoryTree] INFO  s.ehcache.store.ClusteredStore - Cache [categoryTree] using concurrency: 256
2013-04-23 08:52:35,706 [init Store asynchronously productMostUsedVendor] INFO  s.ehcache.store.ClusteredStore - Cache [productMostUsedVendor] using concurrency: 256
2013-04-23 08:52:35,706 [init Store asynchronously storeShippingCategory] INFO  s.ehcache.store.ClusteredStore - Cache [storeShippingCategory] using concurrency: 256
2013-04-23 08:52:35,708 [init Store asynchronously manufacturerLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,708 [init Store asynchronously manufacturerLeadTimeOverride] INFO  s.ehcache.store.ClusteredStore - Cache [manufacturerLeadTimeOverride] using concurrency: 256
2013-04-23 08:52:35,709 [init Store asynchronously manufacturerMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,709 [init Store asynchronously manufacturerMostUsedVendor] INFO  s.ehcache.store.ClusteredStore - Cache [manufacturerMostUsedVendor] using concurrency: 256
2013-04-23 08:52:35,713 [init Store asynchronously shippingCalculationNameView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,713 [init Store asynchronously productCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,713 [init Store asynchronously shippingCalculationNameView] INFO  s.ehcache.store.ClusteredStore - Cache [shippingCalculationNameView] using concurrency: 256
2013-04-23 08:52:35,713 [init Store asynchronously productCategory] INFO  s.ehcache.store.ClusteredStore - Cache [productCategory] using concurrency: 256
2013-04-23 08:52:35,714 [init Store asynchronously productComposite] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,714 [init Store asynchronously productComposite] INFO  s.ehcache.store.ClusteredStore - Cache [productComposite] using concurrency: 256
2013-04-23 08:52:35,715 [init Store asynchronously productSpecValue] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,715 [init Store asynchronously productSpecValue] INFO  s.ehcache.store.ClusteredStore - Cache [productSpecValue] using concurrency: 256
2013-04-23 08:52:35,716 [init Store asynchronously productDrop] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,716 [init Store asynchronously productDrop] INFO  s.ehcache.store.ClusteredStore - Cache [productDrop] using concurrency: 256
2013-04-23 08:52:35,717 [init Store asynchronously vendorEta] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,717 [init Store asynchronously vendorEta] INFO  s.ehcache.store.ClusteredStore - Cache [vendorEta] using concurrency: 256
2013-04-23 08:52:35,718 [init Store asynchronously sourcingRuleFilter] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,718 [init Store asynchronously sourcingRuleFilter] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRuleFilter] using concurrency: 256
2013-04-23 08:52:35,719 [init Store asynchronously vendorLeadTimeMessage] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,719 [init Store asynchronously vendorLeadTimeMessage] INFO  s.ehcache.store.ClusteredStore - Cache [vendorLeadTimeMessage] using concurrency: 256
2013-04-23 08:52:35,747 [init Store asynchronously productCompositeInternal] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,748 [init Store asynchronously productCompositeInternal] INFO  s.ehcache.store.ClusteredStore - Cache [productCompositeInternal] using concurrency: 256
2013-04-23 08:52:35,749 [init Store asynchronously sourcingRule] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,749 [init Store asynchronously sourcingRule] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRule] using concurrency: 256
2013-04-23 08:52:35,749 [init Store asynchronously productCompositeSiteSpecific] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,750 [init Store asynchronously productCompositeSiteSpecific] INFO  s.ehcache.store.ClusteredStore - Cache [productCompositeSiteSpecific] using concurrency: 256
2013-04-23 08:52:35,751 [init Store asynchronously vendorLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,751 [init Store asynchronously vendorLeadTimeOverride] INFO  s.ehcache.store.ClusteredStore - Cache [vendorLeadTimeOverride] using concurrency: 256
2013-04-23 08:52:35,759 [init Store asynchronously shippingCalculationView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,759 [init Store asynchronously shippingCalculationView] INFO  s.ehcache.store.ClusteredStore - Cache [shippingCalculationView] using concurrency: 256
2013-04-23 08:52:35,767 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:52:35,767 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRuleFilter_SourcingRuleId] using concurrency: 256
2013-04-23 08:53:06,269 [WorkerThread(local_cache_transaction_complete_stage, 1, 0)] WARN  .pool.sizeof.ObjectGraphWalker - The configured limit of 1,000 object references was reached while attempting to calculate the size of the object graph. Severe performance degradation could occur if the sizing operation continues. This can be avoided by setting the CacheManger or Cache <sizeOfPolicy> elements maxDepthExceededBehavior to "abort" or adding stop points with @IgnoreSizeOf annotations. If performance degradation is NOT an issue at the configured limit, raise the limit value using the CacheManager or Cache <sizeOfPolicy> elements maxDepth attribute. For more information, see the Ehcache configuration documentation.
2013-04-23 08:53:06,898 [WorkerThread(local_cache_transaction_complete_stage, 1, 0)] WARN  .pool.sizeof.ObjectGraphWalker - The configured limit of 1,000 object references was reached while attempting to calculate the size of the object graph. Severe performance degradation could occur if the sizing operation continues. This can be avoided by setting the CacheManger or Cache <sizeOfPolicy> elements maxDepthExceededBehavior to "abort" or adding stop points with @IgnoreSizeOf annotations. If performance degradation is NOT an issue at the configured limit, raise the limit value using the CacheManager or Cache <sizeOfPolicy> elements maxDepth attribute. For more information, see the Ehcache configuration documentation.
2013-04-23 08:53:08,405 [http-bio-8080-exec-4] WARN  .pool.sizeof.ObjectGraphWalker - The configured limit of 1,000 object references was reached while attempting to calculate the size of the object graph. Severe performance degradation could occur if the sizing operation continues. This can be avoided by setting the CacheManger or Cache <sizeOfPolicy> elements maxDepthExceededBehavior to "abort" or adding stop points with @IgnoreSizeOf annotations. If performance degradation is NOT an issue at the configured limit, raise the limit value using the CacheManager or Cache <sizeOfPolicy> elements maxDepth attribute. For more information, see the Ehcache configuration documentation.
2013-04-23 08:54:51,803 [main] INFO  lina.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
2013-04-23 08:54:51,916 [main] WARN  .tomcat.util.digester.Digester - [SetPropertiesRule]{Server/Service/Engine/Host} Setting property 'xmlValidation' to 'false' did not find a matching property.
2013-04-23 08:54:51,916 [main] WARN  .tomcat.util.digester.Digester - [SetPropertiesRule]{Server/Service/Engine/Host} Setting property 'xmlNamespaceAware' to 'false' did not find a matching property.
2013-04-23 08:54:52,327 [main] INFO  e.coyote.http11.Http11Protocol - Initializing ProtocolHandler ["http-bio-8080"]
2013-04-23 08:54:52,345 [main] INFO  .apache.coyote.ajp.AjpProtocol - Initializing ProtocolHandler ["ajp-bio-8000"]
2013-04-23 08:54:52,348 [main] INFO  ache.catalina.startup.Catalina - Initialization processed in 1103 ms
2013-04-23 08:54:53,122 [main] INFO  .catalina.core.StandardService - Starting service Catalina
2013-04-23 08:54:53,122 [main] INFO  e.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/7.0.26
2013-04-23 08:54:53,135 [pool-4-thread-1] INFO  he.catalina.startup.HostConfig - Deploying web application archive /srv/tomcat/idstore/webapps/build-webservices-1.0.0.war
2013-04-23 08:55:33,128 [pool-4-thread-1] INFO  talina.util.SessionIdGenerator - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [39,285] milliseconds.
2013-04-23 08:55:33,319 [pool-4-thread-1] INFO  st].[/build-webservices-1.0.0] - Initializing Spring FrameworkServlet 'dispatcher'
2013-04-23 08:55:33,319 [pool-4-thread-1] INFO  .web.servlet.DispatcherServlet - FrameworkServlet 'dispatcher': initialization started
2013-04-23 08:55:33,370 [pool-4-thread-1] INFO  pport.XmlWebApplicationContext - Refreshing WebApplicationContext for namespace 'dispatcher-servlet': startup date [Tue Apr 23 08:55:33 PDT 2013]; root of context hierarchy
2013-04-23 08:55:33,476 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from ServletContext resource [/WEB-INF/dispatcher-servlet.xml]
2013-04-23 08:55:33,758 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [configs/applicationContext-buildServices.xml]
2013-04-23 08:55:34,030 [pool-4-thread-1] INFO  ry.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [configs/applicationContext-MSSQL.xml]
2013-04-23 08:55:35,157 [pool-4-thread-1] INFO  ort.DefaultListableBeanFactory - Overriding bean definition for bean 'requestMappingHandlerMapping': replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webMvcConfig; factoryMethodName=requestMappingHandlerMapping; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/build/webservice/config/WebMvcConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=webMvcConfig; factoryMethodName=requestMappingHandlerMapping; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/build/webservice/config/WebMvcConfig.class]]
2013-04-23 08:55:35,390 [pool-4-thread-1] INFO  guringBeanFactoryPostProcessor - No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
2013-04-23 08:55:35,391 [pool-4-thread-1] INFO  guringBeanFactoryPostProcessor - No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
2013-04-23 08:55:35,754 [pool-4-thread-1] INFO  ort.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4b42f44a: defining beans [transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,sqlSessionFactory,baseMapper,categoryMapper,categoryDao,customerMapper,feedWizardMapper,genericCategoryDao,marketplaceMapper,orderMapper,purchaseOrderDao,returnMapper,buildDomainMarshaller,productDao,productFeedMapper,productFeedDao,vendorMapper,utilityDao,laborMapper,securityMapper,dataSource,org.springframework.cache.annotation.AnnotationCacheOperationSource#0,org.springframework.cache.interceptor.CacheInterceptor#0,org.springframework.cache.config.internalCacheAdvisor,cacheManager,serviceByZipParser,productAvailabilityParser,deliveryZipCodeParser,generalElectricService,cyberSourceService,upsService,fergusonDirector,fergusonPriceListBuilder,fergusonProductAvailabilityBuilder,fergusonService,marketplaceService,amazonMarketplaceWebServiceClient,amazonMarketplaceConfig,amazonMarketplaceService,ebayMarketplaceService,channelAdvisorHandlerResolver,channelAdvisorWsProps,channelAdvisorService,bolBuilder,orderService,orderController,purchaseOrderService,sourcingService,returnService,returnController,productService,productFeedService,productController,vendorService,vendorController,laborService,categoryComparator,utilityService,emailService,emailer,emailTemplateMap,emailTemplater,rabbitService,channelInitializer,$autoCreateChannelCandidates,org.springframework.integration.internalDefaultConfiguringBeanFactoryPostProcessor,rabbitRouter,productUpdate,fanoutChannel,org.springframework.integration.config.RouterFactoryBean#0,org.springframework.integration.config.ConsumerEndpointFactoryBean#0,prepareEmail,createEmail,org.springframework.integration.handler.LoggingHandler#0,prepareEmailLogger,org.springframework.integration.handler.LoggingHandler#1,createEmailLogger,categoryService,cyberSourceHandler,cyberSourceServicePort,ebayServicePort,bulkDataExchangeServicePort,fileTransferServicePort,ebayMarketplaceConfiguration,fergusonBuilder,channelAdvisorMarketplaceConfig,orderServiceController,vendorServiceController,categoryServiceController,emailServiceController,webMvcConfig,laborServiceController,generalElectricController,upsServiceController,productServiceController,purchaseOrderServiceController,fergusonServiceController,utilityServiceController,rabbitServiceController,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,nullChannel,errorChannel,_org.springframework.integration.errorLogger,taskScheduler,org.springframework.integration.config.IdGeneratorConfigurer#0]; root of factory hierarchy
2013-04-23 08:55:47,361 [pool-4-thread-1] INFO  ache.EhCacheManagerFactoryBean - Initializing EHCache CacheManager
2013-04-23 08:55:47,519 [pool-4-thread-1] INFO  license.ehcache.LicenseManager - Terracotta license loaded from resource /terracotta-license.key
Capabilities: ehcache, search, TMC, server array offheap
Date of Issue: 2013-04-17
Edition: Free
Email: greg.adams@build.com
License Number: 1004106
License Type: Free Production
Licensee: Greg Adams, Build.com
Max Client Count: 4
Product: BigMemory Max
terracotta.serverArray.maxOffHeap: 8G

2013-04-23 08:55:47,536 [pool-4-thread-1] INFO  .filter.AnnotationSizeOfFilter - Using regular expression provided through VM argument net.sf.ehcache.pool.sizeof.ignore.pattern for IgnoreSizeOf annotation : ^.*cache\..*IgnoreSizeOf$
2013-04-23 08:55:47,547 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Located valid 'tools.jar' at '/usr/java/jdk1.7.0_21/jre/../lib/tools.jar'
2013-04-23 08:55:47,560 [pool-4-thread-1] INFO  che.pool.sizeof.JvmInformation - Detected JVM data model settings of: 64-Bit HotSpot JVM with Compressed OOPs
2013-04-23 08:55:47,843 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Extracted agent jar to temporary file /srv/tomcat/idstore/temp/ehcache-sizeof-agent2326615509029495358.jar
2013-04-23 08:55:47,843 [pool-4-thread-1] INFO  hcache.pool.sizeof.AgentLoader - Trying to load agent @ /srv/tomcat/idstore/temp/ehcache-sizeof-agent2326615509029495358.jar
2013-04-23 08:55:47,854 [pool-4-thread-1] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:55:47,859 [pool-4-thread-1] INFO  he.terracotta.TerracottaClient - Thread [pool-4-thread-1] [cacheManager: 'coreServicesCacheMgr']: Creating new ClusteredInstanceFactory
2013-04-23 08:55:58,709 [Non Stop initialization of Toolkit] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:55:59,316 [Non Stop initialization of Toolkit] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:55:59,596 [pool-4-thread-1] INFO  acottaClusteredInstanceFactory - BigMemory version 4.0.0 was built on 20130219-092252, at revision 38653, with jdk 1.6.0_35 by cruise@su10vmo119
2013-04-23 08:56:00,500 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:00,702 [init Store asynchronously shippingCalculationView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:00,862 [init Store asynchronously mostPopularCategoryProduct] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:00,984 [init Store asynchronously productQuestions] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,031 [init Store asynchronously productSpecAttribute] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,153 [init Store asynchronously productDrop] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,254 [init Store asynchronously productCompositeSiteSpecific] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,334 [init Store asynchronously sourcingRule] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,418 [init Store asynchronously shippingCalculationNameView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,527 [init Store asynchronously productCompositeInternal] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,625 [init Store asynchronously vendorEta] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,708 [init Store asynchronously productMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,777 [init Store asynchronously productComposite] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,839 [init Store asynchronously manufacturerMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,911 [init Store asynchronously productCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:01,967 [init Store asynchronously site] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,043 [init Store asynchronously pricebookMultiplier] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,391 [init Store asynchronously categoryTree] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,434 [init Store asynchronously productComposite] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,435 [init Store asynchronously manufacturerMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,438 [init Store asynchronously site] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,439 [init Store asynchronously productComposite] INFO  s.ehcache.store.ClusteredStore - Cache [productComposite] using concurrency: 256
2013-04-23 08:56:02,444 [init Store asynchronously shippingCalculationNameView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,444 [init Store asynchronously shippingCalculationNameView] INFO  s.ehcache.store.ClusteredStore - Cache [shippingCalculationNameView] using concurrency: 256
2013-04-23 08:56:02,447 [init Store asynchronously productCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,447 [init Store asynchronously productCategory] INFO  s.ehcache.store.ClusteredStore - Cache [productCategory] using concurrency: 256
2013-04-23 08:56:02,450 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,450 [init Store asynchronously sourcingRuleFilter_SourcingRuleId] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRuleFilter_SourcingRuleId] using concurrency: 256
2013-04-23 08:56:02,452 [init Store asynchronously productMostUsedVendor] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,452 [init Store asynchronously productMostUsedVendor] INFO  s.ehcache.store.ClusteredStore - Cache [productMostUsedVendor] using concurrency: 256
2013-04-23 08:56:02,453 [init Store asynchronously productCompositeInternal] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,454 [init Store asynchronously productCompositeInternal] INFO  s.ehcache.store.ClusteredStore - Cache [productCompositeInternal] using concurrency: 256
2013-04-23 08:56:02,465 [init Store asynchronously sourcingRule] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,465 [init Store asynchronously sourcingRule] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRule] using concurrency: 256
2013-04-23 08:56:02,465 [init Store asynchronously vendorEta] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,465 [init Store asynchronously vendorEta] INFO  s.ehcache.store.ClusteredStore - Cache [vendorEta] using concurrency: 256
2013-04-23 08:56:02,470 [init Store asynchronously site] INFO  s.ehcache.store.ClusteredStore - Cache [site] using concurrency: 256
2013-04-23 08:56:02,470 [init Store asynchronously manufacturerMostUsedVendor] INFO  s.ehcache.store.ClusteredStore - Cache [manufacturerMostUsedVendor] using concurrency: 256
2013-04-23 08:56:02,513 [init Store asynchronously storeShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,536 [init Store asynchronously productCompositeSiteSpecific] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,537 [init Store asynchronously productCompositeSiteSpecific] INFO  s.ehcache.store.ClusteredStore - Cache [productCompositeSiteSpecific] using concurrency: 256
2013-04-23 08:56:02,540 [init Store asynchronously productDrop] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,540 [init Store asynchronously productDrop] INFO  s.ehcache.store.ClusteredStore - Cache [productDrop] using concurrency: 256
2013-04-23 08:56:02,602 [init Store asynchronously productSpecAttribute] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,602 [init Store asynchronously productSpecAttribute] INFO  s.ehcache.store.ClusteredStore - Cache [productSpecAttribute] using concurrency: 256
2013-04-23 08:56:02,610 [init Store asynchronously productQuestions] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,610 [init Store asynchronously productQuestions] INFO  s.ehcache.store.ClusteredStore - Cache [productQuestions] using concurrency: 256
2013-04-23 08:56:02,681 [init Store asynchronously pricebookCostView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,692 [init Store asynchronously mostPopularCategoryProduct] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,692 [init Store asynchronously mostPopularCategoryProduct] INFO  s.ehcache.store.ClusteredStore - Cache [mostPopularCategoryProduct] using concurrency: 256
2013-04-23 08:56:02,745 [init Store asynchronously shippingCalculationView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,746 [init Store asynchronously shippingCalculationView] INFO  s.ehcache.store.ClusteredStore - Cache [shippingCalculationView] using concurrency: 256
2013-04-23 08:56:02,785 [init Store asynchronously storeShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,785 [init Store asynchronously storeShippingCategory] INFO  s.ehcache.store.ClusteredStore - Cache [storeShippingCategory] using concurrency: 256
2013-04-23 08:56:02,807 [init Store asynchronously zipLatLong] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,856 [init Store asynchronously categoryTree] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,856 [init Store asynchronously categoryTree] INFO  s.ehcache.store.ClusteredStore - Cache [categoryTree] using concurrency: 256
2013-04-23 08:56:02,859 [pool-4-thread-1] INFO  ework.oxm.jaxb.Jaxb2Marshaller - Creating JAXBContext with context path [com.build.domain.product]
2013-04-23 08:56:02,891 [init Store asynchronously product] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,930 [init Store asynchronously pricebookMultiplier] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,930 [init Store asynchronously pricebookMultiplier] INFO  s.ehcache.store.ClusteredStore - Cache [pricebookMultiplier] using concurrency: 256
2013-04-23 08:56:02,971 [init Store asynchronously vendorLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,983 [init Store asynchronously zipLatLong] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:02,983 [init Store asynchronously zipLatLong] INFO  s.ehcache.store.ClusteredStore - Cache [zipLatLong] using concurrency: 256
2013-04-23 08:56:02,995 [init Store asynchronously pricebookCostView] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,008 [init Store asynchronously pricebookCostView] INFO  s.ehcache.store.ClusteredStore - Cache [pricebookCostView] using concurrency: 256
2013-04-23 08:56:03,051 [init Store asynchronously product] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,051 [init Store asynchronously product] INFO  s.ehcache.store.ClusteredStore - Cache [product] using concurrency: 256
2013-04-23 08:56:03,053 [init Store asynchronously siteDatabaseLookup] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,105 [init Store asynchronously sourcingRuleFilter] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,118 [init Store asynchronously vendorLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,118 [init Store asynchronously vendorLeadTimeOverride] INFO  s.ehcache.store.ClusteredStore - Cache [vendorLeadTimeOverride] using concurrency: 256
2013-04-23 08:56:03,143 [init Store asynchronously siteDatabaseLookup] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,143 [init Store asynchronously siteDatabaseLookup] INFO  s.ehcache.store.ClusteredStore - Cache [siteDatabaseLookup] using concurrency: 256
2013-04-23 08:56:03,175 [init Store asynchronously productSpecValue] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,182 [init Store asynchronously sourcingRuleFilter] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,182 [init Store asynchronously sourcingRuleFilter] INFO  s.ehcache.store.ClusteredStore - Cache [sourcingRuleFilter] using concurrency: 256
2013-04-23 08:56:03,236 [init Store asynchronously uniqueIdShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,256 [init Store asynchronously productSpecValue] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,256 [init Store asynchronously productSpecValue] INFO  s.ehcache.store.ClusteredStore - Cache [productSpecValue] using concurrency: 256
2013-04-23 08:56:03,283 [init Store asynchronously manufacturerLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,308 [init Store asynchronously uniqueIdShippingCategory] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,308 [init Store asynchronously uniqueIdShippingCategory] INFO  s.ehcache.store.ClusteredStore - Cache [uniqueIdShippingCategory] using concurrency: 256
2013-04-23 08:56:03,348 [init Store asynchronously vendorLeadTimeMessage] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,369 [init Store asynchronously manufacturerLeadTimeOverride] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,369 [init Store asynchronously manufacturerLeadTimeOverride] INFO  s.ehcache.store.ClusteredStore - Cache [manufacturerLeadTimeOverride] using concurrency: 256
2013-04-23 08:56:03,408 [init Store asynchronously vendorLeadTimeMessage] INFO  .pool.impl.DefaultSizeOfEngine - using Agent sizeof engine
2013-04-23 08:56:03,408 [init Store asynchronously vendorLeadTimeMessage] INFO  s.ehcache.store.ClusteredStore - Cache [vendorLeadTimeMessage] using concurrency: 256
2013-04-23 08:56:07,734 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/composite/{orderNumber}],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.OrderComposite com.build.webservice.order.OrderServiceController.getOrderComposite(int,java.lang.String)
2013-04-23 08:56:07,735 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/composite],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.OrderComposite com.build.webservice.order.OrderServiceController.createOrder(com.build.domain.order.OrderComposite)
2013-04-23 08:56:07,736 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/tokenize/{cardNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.order.OrderServiceController.tokenizeCard(java.lang.String,com.build.domain.order.CreditCardInfo)
2013-04-23 08:56:07,736 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/cartItems],methods=[GET],params=[cartNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.CartItem> com.build.webservice.order.OrderServiceController.getCartItems(java.lang.String,java.lang.String)
2013-04-23 08:56:07,737 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[GET],params=[transId && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Charge com.build.webservice.order.OrderServiceController.getCharge(int,java.lang.String)
2013-04-23 08:56:07,738 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[GET],params=[orderNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.Charge> com.build.webservice.order.OrderServiceController.getCharges(int,java.lang.String)
2013-04-23 08:56:07,738 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders/{paypalPendingOrderId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPendingOrder com.build.webservice.order.OrderServiceController.getPaypalPendingOrder(int)
2013-04-23 08:56:07,739 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPendingOrder com.build.webservice.order.OrderServiceController.savePaypalPendingOrder(com.build.domain.order.PaypalPendingOrder)
2013-04-23 08:56:07,739 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPendingOrders/{paypalPendingOrderId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.order.OrderServiceController.deletePaypalPendingOrder(int)
2013-04-23 08:56:07,739 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments/{paypalPaymentId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.getPaypalPaymentById(int)
2013-04-23 08:56:07,740 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[GET],params=[paymentId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.getPaypalPaymentByPaymentId(int)
2013-04-23 08:56:07,740 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[GET],params=[paypalOrderNumber],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.order.PaypalPayment> com.build.webservice.order.OrderServiceController.getPaypalPaymentsByOrder(int)
2013-04-23 08:56:07,741 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.PaypalPayment com.build.webservice.order.OrderServiceController.savePaypalPayment(com.build.domain.order.PaypalPayment)
2013-04-23 08:56:07,741 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/paypalPayments/{paypalPaymentId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.order.OrderServiceController.deletePaypalPayment(int)
2013-04-23 08:56:07,741 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/generateBol],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.order.OrderServiceController.generateBol(com.build.domain.order.bol.Bol)
2013-04-23 08:56:07,742 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Order com.build.webservice.order.OrderServiceController.save(com.build.domain.order.Order)
2013-04-23 08:56:07,742 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/customer],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.customer.Customer com.build.webservice.order.OrderServiceController.save(com.build.domain.customer.Customer)
2013-04-23 08:56:07,742 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/charges],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Charge com.build.webservice.order.OrderServiceController.save(com.build.domain.order.Charge)
2013-04-23 08:56:07,743 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/address],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.customer.Address com.build.webservice.order.OrderServiceController.save(com.build.domain.customer.Address)
2013-04-23 08:56:07,743 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/cartItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.CartItem com.build.webservice.order.OrderServiceController.save(com.build.domain.order.CartItem)
2013-04-23 08:56:07,744 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/orders/{orderNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.order.Order com.build.webservice.order.OrderServiceController.getOrder(int,java.lang.String)
2013-04-23 08:56:07,750 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/resetConfirmZipVendorServiceableZipCode],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.resetConfirmZipVendorServiceableZipCode()
2013-04-23 08:56:07,751 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors],methods=[GET],params=[vendorId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.getVendor(java.lang.String)
2013-04-23 08:56:07,751 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/{vendorUid}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.getVendor(int)
2013-04-23 08:56:07,751 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorServiceableZipCode com.build.webservice.vendor.VendorServiceController.getVendorServiceableZipCode(java.lang.Integer,java.lang.Integer,java.lang.String)
2013-04-23 08:56:07,752 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups/{vendorGroupId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.Vendor> com.build.webservice.vendor.VendorServiceController.getVendorsInGroup(int)
2013-04-23 08:56:07,752 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.getVendorCost(int,int,java.lang.Integer)
2013-04-23 08:56:07,753 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs/{vendorCostId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.getVendorCost(int)
2013-04-23 08:56:07,753 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[POST],params=[vendorUid && uniqueId && cost && operation=save],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.saveVendorCost(int,int,java.lang.Integer,double)
2013-04-23 08:56:07,754 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorCost com.build.webservice.vendor.VendorServiceController.saveVendorCost(com.build.domain.vendor.VendorCost)
2013-04-23 08:56:07,754 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/inventory],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.VendorInventory> com.build.webservice.vendor.VendorServiceController.getVendorInventorySet(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:56:07,755 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/{vendorUid}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendor(int)
2013-04-23 08:56:07,755 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.Vendor com.build.webservice.vendor.VendorServiceController.saveVendor(com.build.domain.vendor.Vendor)
2013-04-23 08:56:07,755 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && uniqueId && operation=hasCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.hasVendorCost(int,int,java.lang.Integer)
2013-04-23 08:56:07,756 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[vendorUid && productId && manufacturer && finish && operation=hasCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.hasVendorCost(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
2013-04-23 08:56:07,756 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs/{vendorCostId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendorCost(int)
2013-04-23 08:56:07,757 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes/{vendorServiceableZipCodeId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.deleteVendorServiceableZipCode(int)
2013-04-23 08:56:07,757 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/serviceableZipCodes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.vendor.VendorServiceableZipCode com.build.webservice.vendor.VendorServiceController.saveVendorServiceableZipCode(com.build.domain.vendor.VendorServiceableZipCode)
2013-04-23 08:56:07,758 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/removeUnconfirmedVendorServiceableZipCode],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.vendor.VendorServiceController.saveVendorServiceableZipCode()
2013-04-23 08:56:07,758 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.VendorGroup> com.build.webservice.vendor.VendorServiceController.getVendorGroups()
2013-04-23 08:56:07,759 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/groups],methods=[GET],params=[vendorId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.vendor.VendorServiceController.getGroupIdsForVendor(java.lang.String)
2013-04-23 08:56:07,759 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/queryCount],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.vendor.VendorServiceController.getVendorQueryCount(java.lang.Integer,java.lang.String,java.lang.String)
2013-04-23 08:56:07,760 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/find],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.vendor.Vendor> com.build.webservice.vendor.VendorServiceController.findVendors(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)
2013-04-23 08:56:07,760 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/vendors/costs],methods=[GET],params=[uniqueId && cost && operation=validateCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.vendor.VendorServiceController.validateVendorCost(int,double)
2013-04-23 08:56:07,761 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/categories/subs],methods=[GET],params=[siteId && parentId && featured && updateCache],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.category.CategoryItem> com.build.webservice.category.CategoryServiceController.getSubCategories(int,int,boolean,boolean)
2013-04-23 08:56:07,762 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/categories/manufacturers],methods=[GET],params=[siteId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.category.CategoryItem com.build.webservice.category.CategoryServiceController.getManufacturerCategory(int,java.lang.String)
2013-04-23 08:56:07,764 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[GET],params=[emailQueueTypeId && identifierValue],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.EmailQueue com.build.webservice.email.EmailServiceController.getEmailQueue(int,java.lang.String)
2013-04-23 08:56:07,764 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[GET],params=[emailQueueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.EmailQueue com.build.webservice.email.EmailServiceController.getEmailQueue(int)
2013-04-23 08:56:07,765 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue/{emailQueueId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.deleteEmailQueue(int)
2013-04-23 08:56:07,765 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/amqp],methods=[GET],params=[emailTemplateId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.utility.EmailTemplateParameter> com.build.webservice.email.EmailServiceController.getEmailTemplateParameterByEmailTemplateId(int)
2013-04-23 08:56:07,766 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.saveEmailQueue(com.build.domain.utility.EmailQueue)
2013-04-23 08:56:07,766 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/emails/queue],methods=[POST],params=[emailQueueTypeId && identifierValue],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.email.EmailServiceController.saveEmailQueue(int,java.lang.String)
2013-04-23 08:56:07,771 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveService(com.build.domain.labor.Service)
2013-04-23 08:56:07,771 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services/{serviceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteService(int)
2013-04-23 08:56:07,772 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveProductXService(com.build.domain.labor.ProductXService)
2013-04-23 08:56:07,772 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products/{productXServiceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteProductXService(int)
2013-04-23 08:56:07,773 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.labor.VendorServiceableZipCodeService> com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeService(java.lang.String)
2013-04-23 08:56:07,773 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.saveVendorServiceableZipCodeService(com.build.domain.labor.VendorServiceableZipCodeService)
2013-04-23 08:56:07,773 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes/{vendorServiceableZipCodeServiceId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.labor.LaborServiceController.deleteVendorServiceableZipCodeService(int)
2013-04-23 08:56:07,774 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[availableZipCode && availableProductUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.labor.LaborServiceController.getAvailableServicesByZipAndUniqueId(java.lang.String,int)
2013-04-23 08:56:07,774 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[unavailableZipCode && unavailableProductUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.Integer> com.build.webservice.labor.LaborServiceController.getUnavailableServicesByZipAndUniqueId(java.lang.String,int)
2013-04-23 08:56:07,775 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.Service com.build.webservice.labor.LaborServiceController.getServiceByServiceId(int)
2013-04-23 08:56:07,775 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[externalServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.Service com.build.webservice.labor.LaborServiceController.getServiceByExternalServiceId(java.lang.String)
2013-04-23 08:56:07,776 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[serviceTypeId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ServiceType com.build.webservice.labor.LaborServiceController.getServiceTypeByServiceTypeId(java.lang.Integer)
2013-04-23 08:56:07,776 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/services],methods=[GET],params=[type],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ServiceType com.build.webservice.labor.LaborServiceController.getServiceTypeByType(java.lang.String)
2013-04-23 08:56:07,777 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[productXServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ProductXService com.build.webservice.labor.LaborServiceController.getProductXServiceByProductXServiceId(java.lang.Integer)
2013-04-23 08:56:07,777 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[uniqueId && serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.ProductXService com.build.webservice.labor.LaborServiceController.getProductXServiceByUniqueIdAndServiceId(java.lang.Integer,java.lang.Integer)
2013-04-23 08:56:07,778 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/products],methods=[GET],params=[productUniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.labor.ProductXService> com.build.webservice.labor.LaborServiceController.getProductXServiceByUniqueId(int)
2013-04-23 08:56:07,778 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[vendorServiceableZipCodeServiceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.VendorServiceableZipCodeService com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeServiceByVendorServiceableZipCodeServiceId(java.lang.Integer)
2013-04-23 08:56:07,779 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/labor/zipcodes],methods=[GET],params=[vendorServiceableZipCodeId && serviceId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.labor.VendorServiceableZipCodeService com.build.webservice.labor.LaborServiceController.getVendorServiceableZipCodeServiceByVendorServiceableZipCodeIdAndServiceId(java.lang.Integer,java.lang.Integer)
2013-04-23 08:56:07,782 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/requestDeliveryZipCodes],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ge.GeneralElectricController.requestDeliveryZipCodes()
2013-04-23 08:56:07,782 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/deliveryAvailability/{zipCode}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<java.lang.String> com.build.webservice.ge.GeneralElectricController.getDeliveryCalendarAvailability(java.lang.String)
2013-04-23 08:56:07,783 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/deliveryDate/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.ge.GeneralElectricController.getDeliveryDate(int)
2013-04-23 08:56:07,783 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/validateCart],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.CartValidator com.build.webservice.ge.GeneralElectricController.validateCart(com.build.domain.ge.CartValidator)
2013-04-23 08:56:07,784 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/reserveDeliveryDate/{poNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Boolean com.build.webservice.ge.GeneralElectricController.reserveDeliveryDate(int)
2013-04-23 08:56:07,784 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/modelAvailability],methods=[GET],params=[uniqueId && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.ModelAvailability com.build.webservice.ge.GeneralElectricController.getModelAvailability(int,java.lang.String)
2013-04-23 08:56:07,784 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/modelAvailability],methods=[GET],params=[productId && manufacturer && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.ge.ModelAvailability> com.build.webservice.ge.GeneralElectricController.getModelAvailability(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:56:07,785 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/realAvailability],methods=[GET],params=[uniqueId && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.ge.ModelAvailability com.build.webservice.ge.GeneralElectricController.getRealTimeModelAvailability(int,java.lang.String)
2013-04-23 08:56:07,785 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/realAvailability],methods=[GET],params=[productId && manufacturer && zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.ge.ModelAvailability> com.build.webservice.ge.GeneralElectricController.getRealTimeModelAvailability(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:56:07,786 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ge/sendGeOrders],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.ge.GeneralElectricController.sendGeOrders()
2013-04-23 08:56:07,787 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ups/getTimeInTransit],methods=[GET],params=[fromPostalCode && fromCountry && toPostalCode && toCountry && shipDate && monetaryValue && weight],headers=[],consumes=[],produces=[],custom=[]}" onto public com.ups.api.timeintransitresponse.TimeInTransitResponse com.build.webservice.ups.UpsServiceController.getTimeInTransit(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Date,java.lang.String,java.lang.String) throws javax.xml.bind.JAXBException,java.io.IOException
2013-04-23 08:56:07,794 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[GET],params=[productId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.Product> com.build.webservice.product.ProductServiceController.getProducts(java.lang.String,java.lang.String)
2013-04-23 08:56:07,795 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/composite],methods=[GET],params=[manufacturer && productId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.composite.ProductComposite com.build.webservice.product.ProductServiceController.getProductComposite(java.lang.String,java.lang.String,java.lang.String,int,boolean,int,int,boolean)
2013-04-23 08:56:07,796 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/composite],methods=[GET],params=[uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.composite.ProductComposite com.build.webservice.product.ProductServiceController.getProductComposite(java.lang.Integer,java.lang.String,int,boolean,int,int,boolean)
2013-04-23 08:56:07,796 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductDrop> com.build.webservice.product.ProductServiceController.getProductDrops(java.util.List<com.build.domain.product.SimpleProductCriteria>,int,java.lang.String,java.lang.String,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:56:07,797 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && pricebookId && !simpleCost],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.getPricebookCost(int,int)
2013-04-23 08:56:07,797 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/imageGallery],methods=[GET],params=[productId && manufacturer],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductImageGallery> com.build.webservice.product.ProductServiceController.getProductImageGallery(java.lang.String,java.lang.String)
2013-04-23 08:56:07,798 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/shippingCalculationName],methods=[GET],params=[active && omc && site && customers],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ShippingCalculationName> com.build.webservice.product.ProductServiceController.getShippingCalculationNames(boolean,boolean,boolean,boolean)
2013-04-23 08:56:07,798 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.getProduct(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:56:07,798 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/{uniqueId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.getProduct(int,boolean)
2013-04-23 08:56:07,799 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/shippingCalculationName],methods=[GET],params=[Id],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ShippingCalculationName com.build.webservice.product.ProductServiceController.getShippingCalculationName(int)
2013-04-23 08:56:07,799 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/{productAttributeId}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductAttribute com.build.webservice.product.ProductServiceController.getProductAttribute(int)
2013-04-23 08:56:07,800 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/queryCount],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.product.ProductServiceController.getProductAttributeQueryCount(java.lang.String,java.lang.Boolean)
2013-04-23 08:56:07,800 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes/find],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductAttribute> com.build.webservice.product.ProductServiceController.findProductAttributes(java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,int,int)
2013-04-23 08:56:07,800 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && pricebookId && simpleCost],headers=[],consumes=[],produces=[],custom=[]}" onto public double com.build.webservice.product.ProductServiceController.getPrice(int,int)
2013-04-23 08:56:07,801 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductDrop com.build.webservice.product.ProductServiceController.getProductDrop(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:56:07,801 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/drops/popular],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.Map<java.lang.String, java.util.List<com.build.domain.product.ProductDrop>> com.build.webservice.product.ProductServiceController.getPopularProductDrops(int,int,com.build.domain.product.ProductDropViewType,boolean)
2013-04-23 08:56:07,802 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[DELETE],params=[uniqueId && pricebookId],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteCost(int,int)
2013-04-23 08:56:07,802 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/stock/],methods=[GET],params=[productId && manufacturer && finish],headers=[],consumes=[],produces=[],custom=[]}" onto public int com.build.webservice.product.ProductServiceController.getProductStock(java.lang.String,java.lang.String,java.lang.String)
2013-04-23 08:56:07,802 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/freightRate],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ShippingRate> com.build.webservice.product.ProductServiceController.getFreightRate(com.build.domain.product.ShippingDetails)
2013-04-23 08:56:07,803 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/saveShippingCalculationName],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ShippingCalculationName com.build.webservice.product.ProductServiceController.saveShippingCalculationName(com.build.domain.product.ShippingCalculationName)
2013-04-23 08:56:07,803 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productAttributes],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductAttribute com.build.webservice.product.ProductServiceController.saveProductAttribute(com.build.domain.product.ProductAttribute)
2013-04-23 08:56:07,803 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[GET],params=[uniqueId && cost && operation=validateCost],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.product.ProductServiceController.validatePricebookCost(int,double)
2013-04-23 08:56:07,804 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[DELETE],params=[quid],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteProductQuestion(int)
2013-04-23 08:56:07,804 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[DELETE],params=[prid],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.deleteProductQuestions(int)
2013-04-23 08:56:07,804 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.ProductQuestion com.build.webservice.product.ProductServiceController.saveProductQuestion(com.build.domain.product.ProductQuestion)
2013-04-23 08:56:07,805 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[GET],params=[prid && updateCache],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductQuestion> com.build.webservice.product.ProductServiceController.getProductQuestion(int,boolean)
2013-04-23 08:56:07,806 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/productquestions],methods=[GET],params=[prid],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.ProductQuestion> com.build.webservice.product.ProductServiceController.getProductQuestion(int)
2013-04-23 08:56:07,806 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.Product com.build.webservice.product.ProductServiceController.save(com.build.domain.product.Product)
2013-04-23 08:56:07,806 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/saveAll],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.product.Product> com.build.webservice.product.ProductServiceController.save(java.util.List<com.build.domain.product.Product>)
2013-04-23 08:56:07,807 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[POST],params=[uniqueId && pricebookId && cost],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.save(int,int,double)
2013-04-23 08:56:07,807 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/price],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.product.PricebookCost com.build.webservice.product.ProductServiceController.save(com.build.domain.product.PricebookCost)
2013-04-23 08:56:07,807 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/products/{uniqueId}],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.product.ProductServiceController.delete(int)
2013-04-23 08:56:07,811 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrder com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrder(int,java.lang.String)
2013-04-23 08:56:07,811 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/composite/{poNumber}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderComposite com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderComposite(int,java.lang.String)
2013-04-23 08:56:07,812 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders],methods=[GET],params=[orderNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrder> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrders(int,java.lang.String)
2013-04-23 08:56:07,812 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems/{uniqueId}],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderCartItem com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItem(int,java.lang.String)
2013-04-23 08:56:07,813 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[GET],params=[poNumber && siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderCartItem> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItems(int,java.lang.String)
2013-04-23 08:56:07,813 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[GET],params=[transId && siteName && status],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderCartItem> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderCartItemsByTransId(int,java.lang.String,java.lang.String)
2013-04-23 08:56:07,814 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poTracking],methods=[GET],params=[poNumber],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.purchaseorder.PurchaseOrderTracking> com.build.webservice.purchaseorder.PurchaseOrderServiceController.getPurchaseOrderTrackingList(int,java.lang.String)
2013-04-23 08:56:07,814 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/sourceOrder/{orderNumber}],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.sourceOrder(int)
2013-04-23 08:56:07,814 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrder com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.PurchaseOrder)
2013-04-23 08:56:07,815 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/filter],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.SourcingRuleFilter)
2013-04-23 08:56:07,815 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/rule],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.SourcingRule)
2013-04-23 08:56:07,816 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.purchaseorder.PurchaseOrderCartItem com.build.webservice.purchaseorder.PurchaseOrderServiceController.save(com.build.domain.purchaseorder.PurchaseOrderCartItem)
2013-04-23 08:56:07,816 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/purchaseorders/poCartItems],methods=[DELETE],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.purchaseorder.PurchaseOrderServiceController.delete(int,java.lang.String)
2013-04-23 08:56:07,817 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ferguson/updatepriceinventorybympn],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ferguson.FergusonServiceController.updateFergusonPricingAndInventory(java.util.List<java.lang.String>)
2013-04-23 08:56:07,818 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/ferguson/builders],methods=[POST],params=[uniqueId],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.ferguson.FergusonServiceController.updateFergusonPricingAndInventory(int)
2013-04-23 08:56:07,820 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[siteId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.Site com.build.webservice.utility.UtilityServiceController.getSite(java.lang.Integer)
2013-04-23 08:56:07,820 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls],methods=[GET],params=[programId],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.ProgramControl com.build.webservice.utility.UtilityServiceController.getProgramControl(java.lang.String)
2013-04-23 08:56:07,821 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls/{id}],methods=[GET],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.utility.ProgramControl com.build.webservice.utility.UtilityServiceController.getProgramControl(int)
2013-04-23 08:56:07,821 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/programControls],methods=[GET],params=[programId && operation=isActive],headers=[],consumes=[],produces=[],custom=[]}" onto public boolean com.build.webservice.utility.UtilityServiceController.getActiveProgram(java.lang.String,java.lang.Integer)
2013-04-23 08:56:07,822 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[live],headers=[],consumes=[],produces=[],custom=[]}" onto public java.util.List<com.build.domain.utility.Site> com.build.webservice.utility.UtilityServiceController.getLiveSites()
2013-04-23 08:56:07,822 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/sites],methods=[GET],params=[siteName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.Integer com.build.webservice.utility.UtilityServiceController.getSiteId(java.lang.String)
2013-04-23 08:56:07,822 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/stateAbbrs],methods=[GET],params=[stateName],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.utility.UtilityServiceController.getStateAbbr(java.lang.String)
2013-04-23 08:56:07,823 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/utility/stateAbbrs],methods=[GET],params=[zipCode],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String com.build.webservice.utility.UtilityServiceController.getStateAbbrByZipCode(java.lang.String)
2013-04-23 08:56:07,824 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/rabbit/consume],methods=[GET],params=[queue],headers=[],consumes=[],produces=[],custom=[]}" onto public com.build.domain.rabbit.RabbitMessage com.build.webservice.rabbit.RabbitServiceController.consumeMessage(java.lang.String)
2013-04-23 08:56:07,825 [pool-4-thread-1] INFO  n.RequestMappingHandlerMapping - Mapped "{[/rabbit/send],methods=[POST],params=[queue],headers=[],consumes=[],produces=[],custom=[]}" onto public void com.build.webservice.rabbit.RabbitServiceController.sendMessage(java.lang.String,com.build.domain.rabbit.RabbitMessage)
2013-04-23 08:56:08,107 [pool-4-thread-1] INFO  urrent.ThreadPoolTaskScheduler - Initializing ExecutorService  'taskScheduler'
2013-04-23 08:56:08,127 [pool-4-thread-1] INFO  port.DefaultLifecycleProcessor - Starting beans in phase -2147483648
2013-04-23 08:56:08,128 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {router} as a subscriber to the 'rabbitRouter' channel
2013-04-23 08:56:08,128 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'rabbitRouter' has 1 subscriber(s).
2013-04-23 08:56:08,128 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started org.springframework.integration.config.ConsumerEndpointFactoryBean#0
2013-04-23 08:56:08,128 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:prepareEmailLogger} as a subscriber to the 'prepareEmail' channel
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'prepareEmail' has 1 subscriber(s).
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started prepareEmailLogger
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:createEmailLogger} as a subscriber to the 'createEmail' channel
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  egration.channel.DirectChannel - Channel 'createEmail' has 1 subscriber(s).
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started createEmailLogger
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  hannel.PublishSubscribeChannel - Channel 'errorChannel' has 1 subscriber(s).
2013-04-23 08:56:08,129 [pool-4-thread-1] INFO  n.endpoint.EventDrivenConsumer - started _org.springframework.integration.errorLogger
2013-04-23 08:56:08,228 [pool-4-thread-1] INFO  .web.servlet.DispatcherServlet - FrameworkServlet 'dispatcher': initialization completed in 34908 ms
2013-04-23 08:56:08,260 [pool-4-thread-1] INFO  he.catalina.startup.HostConfig - Deploying web application directory /srv/tomcat/idstore/webapps/manager
2013-04-23 08:56:08,329 [main] INFO  e.coyote.http11.Http11Protocol - Starting ProtocolHandler ["http-bio-8080"]
2013-04-23 08:56:08,365 [main] INFO  .apache.coyote.ajp.AjpProtocol - Starting ProtocolHandler ["ajp-bio-8000"]
2013-04-23 08:56:08,381 [main] INFO  ache.catalina.startup.Catalina - Server startup in 76032 ms
2013-04-23 08:56:17,243 [http-bio-8080-exec-1] ERROR d.webservice.ServiceController - marshalling Throwable
net.sf.ehcache.CacheException: Uncaught exception in get() - java.io.StreamCorruptedException: invalid type code: 00
	at org.terracotta.modules.ehcache.store.ClusteredSafeStore.get(ClusteredSafeStore.java:203)
	at org.terracotta.modules.ehcache.store.nonstop.NonStopStoreWrapper.get(NonStopStoreWrapper.java:517)
	at net.sf.ehcache.Cache.get(Cache.java:1634)
	at org.springframework.cache.ehcache.EhCacheCache.get(EhCacheCache.java:61)
	at org.springframework.cache.transaction.TransactionAwareCacheDecorator.get(TransactionAwareCacheDecorator.java:59)
	at org.springframework.cache.interceptor.CacheAspectSupport.inspectCacheables(CacheAspectSupport.java:310)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:198)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:66)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
	at com.sun.proxy.$Proxy78.getProductComposite(Unknown Source)
	at com.build.service.product.ProductServiceImpl.getProductComposite(ProductServiceImpl.java:971)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:198)
	at com.sun.proxy.$Proxy82.getProductComposite(Unknown Source)
	at com.build.webservice.product.ProductServiceController.getProductComposite(ProductServiceController.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:219)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:746)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:687)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:915)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:811)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:796)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
Caused by: java.lang.AssertionError: java.io.StreamCorruptedException: invalid type code: 00
	at com.terracotta.toolkit.object.serialization.ObjectStreamClassMapping.getObjectStreamClassFor(ObjectStreamClassMapping.java:156)
	at com.terracotta.toolkit.object.serialization.SerializationStrategyImpl$SerializerObjectInputStream.readClassDescriptor(SerializationStrategyImpl.java:215)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1599)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1515)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1769)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at net.sf.ehcache.ElementData.readExternal(ElementData.java:92)
	at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:1835)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1794)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at com.terracotta.toolkit.object.serialization.SerializationStrategyImpl.deserialize(SerializationStrategyImpl.java:48)
	at com.terracotta.toolkit.object.serialization.SerializedMapValue.getDeserializedValueCopy(SerializedMapValue.java:101)
	at com.terracotta.toolkit.collections.map.ServerMap.deserialize(ServerMap.java:346)
	at com.terracotta.toolkit.collections.map.ServerMap.deserialize(ServerMap.java:337)
	at com.terracotta.toolkit.collections.map.ServerMap.getNonExpiredValue(ServerMap.java:292)
	at com.terracotta.toolkit.collections.map.ServerMap.doGet(ServerMap.java:225)
	at com.terracotta.toolkit.collections.map.ServerMap.get(ServerMap.java:1072)
	at com.terracotta.toolkit.collections.map.AggregateServerMap.get(AggregateServerMap.java:293)
	at com.terracotta.toolkit.collections.map.ToolkitCacheImpl.get(ToolkitCacheImpl.java:132)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at com.terracotta.toolkit.nonstop.NonStopInvocationHandler.invokeMethod(NonStopInvocationHandler.java:97)
	at com.terracotta.toolkit.nonstop.NonStopInvocationHandler.invoke(NonStopInvocationHandler.java:47)
	at com.sun.proxy.$Proxy61.get(Unknown Source)
	at org.terracotta.modules.ehcache.store.ClusteredStoreBackend.get(ClusteredStoreBackend.java:380)
	at org.terracotta.modules.ehcache.store.ClusteredStore.get(ClusteredStore.java:323)
	at org.terracotta.modules.ehcache.store.ClusteredSafeStore.get(ClusteredSafeStore.java:196)
	... 51 more
Caused by: java.io.StreamCorruptedException: invalid type code: 00
	at java.io.ObjectInputStream.readTypeString(ObjectInputStream.java:1423)
	at java.io.ObjectStreamClass.readNonProxy(ObjectStreamClass.java:692)
	at java.io.ObjectInputStream.readClassDescriptor(ObjectInputStream.java:828)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1599)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1515)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1335)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at com.terracotta.toolkit.object.serialization.ObjectStreamClassMapping.getObjectStreamClassFor(ObjectStreamClassMapping.java:150)
	... 80 more
